name: Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    # runs-on: ubuntu-latest
    # 此作业运行在什么操作系统上
    runs-on: ${{ matrix.os }}

    # strategy上下文，有关当前作业的矩阵执行策略的信息
    strategy:
      # matrix上下文，包含在工作流中定义的应用于当前作业的矩阵属性
      matrix:
        # 你可以添加更多你想要的构建平台
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      # 安装Rust的稳定版本
      # 也可以使用@nightly来下载测试版
      uses: dtolnay/rust-toolchain@nightly
      # 运行此步骤提供的参数
      with:
        # 让Rust编译到我们所需要的平台(这已经定义在matrix关键字里了)
        targets: ${{ matrix.target }}
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --release --target ${{ matrix.target }}
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: test
        args: --verbose --target ${{ matrix.target }}
